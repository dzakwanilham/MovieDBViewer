// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios18.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -module-name NetworkManagerFramework
import Foundation
@_exported import NetworkManagerFramework
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum InternalErrorCode : Swift.String, Swift.Error {
  case unableToComplete
  case invalidResponse
  case invalidData
  case jsonError
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class NetworkManager {
  public static let shared: NetworkManagerFramework.NetworkManager
  public func request<T>(url: Foundation.URLRequest, responseType: T.Type, dispatchQueue: Dispatch.DispatchQueue = .main, onComplete: @escaping (Swift.Result<T, NetworkManagerFramework.InternalErrorCode>) -> Swift.Void) where T : Swift.Decodable
  @objc deinit
}
extension NetworkManagerFramework.InternalErrorCode : Swift.Equatable {}
extension NetworkManagerFramework.InternalErrorCode : Swift.Hashable {}
extension NetworkManagerFramework.InternalErrorCode : Swift.RawRepresentable {}
